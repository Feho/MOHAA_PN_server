// bots3
// by jv_map

// individual bot handler

main:
	waitthread init
	
	// gets me a name
	waitthread devise_name
	
	iprintlnbold group.name " has entered the battle"
	
	// decide on the skins
	local.skin_allies 	= (waitthread level.bots.common::randoment level.bots.skinlist[allies])[1]
	local.skin_axis 	= (waitthread level.bots.common::randoment level.bots.skinlist[axis])[1]
	
	group.skin_brushmodel[allies] 	= "models/player/" + local.skin_allies
	group.skin_brushmodel[axis] 	= "models/player/" + local.skin_axis
	
	while(!group.extinguish)
	{
		waitthread live
		
		local.delay = float (getcvar bots3_respawn_delay)
		if(local.delay < 0.05)
		{
			local.delay = 0.05 // wait at least a frame
		}
		
		local.time_done = level.time + local.delay
		while(!group.extinguish && level.time < local.time_done)
		{
			waitframe
		}
	}
	
	// cosmetic delay
	// this will make it look like the bot got killed and then disconnects
	// if bots3 is set to 0, it'll look like the bot was kicked (remove immediately)
	if(getcvar "bots3" == "1")
	{
		wait 0.5
		wait (randomfloat 3.0)
	}
	iprintlnbold group.name " has left the battle"
end

init:
	
	// add this group to the bot array
	level.bots_in_game++
	level.botlist[level.bots_in_game] = group
	
	
end

devise_name:

	local.prefix = getcvar bots3_prefix
	
	if(local.prefix == "0" || local.prefix == "none")
	{
		local.prefix = ""
	}

	group.name = local.prefix + (waitthread level.bots.common::randoment level.bots.namelist)[1]
	
end

live:

	// choose a team
	if(getcvar g_gametype == "1")
	{
		local.team = level.dmteam[randomint 2]
	}
	else
	{
		if(group.last_team_switch_time == NIL || level.time - group.last_team_switch_time > level.bots.teamswitch_delay)
		{
			local.num_ally = waitthread level.bots.common::troopstrength level.teamid[allies]
			local.num_axis = waitthread level.bots.common::troopstrength level.teamid[axis]
			
			if(local.num_ally > local.num_axis)
			{
				local.team = axis
			}
			else if(local.num_ally < local.num_axis)
			{
				local.team = allies
			}
			else
			{
				local.team = level.dmteam[randomint 2]
			}
			
			if(local.team != group.last_team)
			{
				if(local.team == allies)
				{
					iprintlnbold group.name " has joined the Allies"
				}
				else
				{
					iprintlnbold group.name " has joined the Axis"
				}
			}
			group.last_team = local.team
			group.last_team_switch_time = level.time
		}
		else
		{
			local.team = group.last_team
		}
	}

	// choose a spawnpoint
	if(int (getcvar g_gametype) <= 1)
	{
		// pick a ffa spawn
		local.spawntgname = info_bot_deathmatch
	}
	else
	{
		// pick a tdm/obj spawn
		local.spawntgname = info_bot_ + local.team
	}
	
	local.spawnpt = waitthread level.bots.common::randoment $(local.spawntgname)
	
	if(!local.spawnpt)
	{
		// this is pretty much fatal
		println "[BOTS3] No spawnpoint named '" local.spawntgname "'. Can't spawn bot."
		
		// don't spam console w/ errors
		self delete
		wait 5.0
		end
	}
	
	// decide on the primary weapon
	local.primary_weap = (waitthread level.bots.common::randoment level.bots.weaplist[local.team])[1]
	local.prim_weap_model = "models/weapons/" + local.primary_weap + ".tik"
	
	// spawn him
	local.b = spawn Actor model level.bots.dummymodel
	
	// ready to go
	local.b model group.skin_brushmodel[local.team]
	local.b origin local.spawnpt.origin
	local.b angles (0.0 local.spawnpt.angle 0.0)
	local.b.dmteam = local.team
	local.b.name = group.name
	
	// some extra inits
	local.b.enableEnemy = 0
	local.b.gren_awareness = 0.0
	local.b.accuracy = 100.0
	
	local.b.painhandler = level.bots.pain
	local.b.deathhandler = level.bots.killed
	
	local.b.viewkick = 0.0
	
	// manon hack
	local.b.female = local.b.brushmodel == "models/player/allied_manon.tik"
	
	// create weapon listeners
	// these listeners hold ammo in clip and other useful state
	local.b.weapon_primary = waitthread level.bots.weapon::factory local.primary_weap
	local.b.weapon_sidearm = waitthread level.bots.weapon::factory level.bots.sidearm[local.b.dmteam]
	local.b.weapon_grenade = waitthread level.bots.weapon::factory level.bots.grenade[local.b.dmteam]
	
	// make a fake weapon (this'll do the damage instead of the visible dummy weapon)
	local.b.fakeweapon = spawn Weapon
	local.b.fakeweapon hide
	
	// bot specific vars
	local.b.lean_angle = 0.0
	
	// init keys
	local.b.key_lean = 0 // 1: lean right , 0: center , -1: lean left
	local.b.key_attack_primary = 0
	//local.b.key_strafe = 0
	local.b.botmovedir = (0 0 0) //vector_normalize ( -1 -4 0)
	local.b.pose = level.bots.POSE_STAND
	local.b.key_move_slow = 0
	local.b.key_jump = 0
	
	local.b.bot_target_viewangles = (0 0 0)
	local.b.pitch = 0.0
	
	local.b.last_pain_time = 0.0
	
	// start holstered
	local.b weapon_internal ""
	local.b.current_weapon = NIL
	
	local.b.spawn_time = level.time
	
	// unholster primary weapon
	local.b.new_weapon = local.b.weapon_primary
	
	local.b hurt 0.01
	local.b targetname "bot3"
	local.b forceActivate
	
	local.b.blendtime = 0.2 // good overall blend but doesn't seem to work :/
	
	// telefrag the spawnpoint
	waitthread level.bots.common::telefrag local.spawnpt local.b
	
	local.b thread level.bots.anim::upperanimhandler
	local.b thread level.bots.anim::misc_controller
	local.b thread level.bots.anim::legs
	local.b thread level.bots.anim::torso
	
	// thinkie thinkie
	local.b thread level.bots.fight::fight
	
	local.b waittill death
	
	// notify attacker
	if(local.b.fact && local.b.fact.attacker)
	{
		if(local.b.fact.attacker.classname == Player)
		{
			local.b.fact.attacker iprint ("You killed " + local.b.name) 1
		}
	}
	
	// don't make sound if bots shutdown
	if(getcvar bots3 == "1")
	{
		if(local.b.female)
		{
			local.b playsound manon_death
		}
		else
		{
			local.b playsound player_death
		}
	}
	
	// remove weapon listeners so 
	// we're not leaking memory
	// listener does not exist when 
	// a slot is unarmed
	if(local.b.weapon_primary)
	{
		local.b.weapon_primary remove
	}
	if(local.b.weapon_sidearm)
	{
		local.b.weapon_sidearm remove
	}
	if(local.b.weapon_grenade)
	{
		local.b.weapon_grenade remove
	}
	
	local.b.fakeweapon remove
end