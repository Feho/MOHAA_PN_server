// bots3
// by jv_map

// init to specified value if blank
initcvar local.cvar local.value:
	if(getcvar local.cvar == "")
	{
		setcvar local.cvar local.value
	}
end

// returns number of players + number of bots on specified team
// should not be called when gametype is 0 (single player)
troopstrength local.teamid:
	local.strength = waitthread playerstrength local.teamid
	local.strength += waitthread botstrength local.teamid
end local.strength

playerstrength local.teamid:
end (waitthread strength $player local.teamid)

botstrength local.teamid:
end (waitthread strength $bot3 local.teamid)

strength local.list local.teamid:
	local.cnt = 0
	for(local.i = 1; local.i <= local.list.size; local.i++)
	{
		local.cnt += isAlive local.list[local.i] && local.list[local.i].dmteam == level.dmteam[local.teamid]
	}
end local.cnt

// telefrags the spawnpoint
telefrag local.spt local.attacker:
	waitthread ethnic_telefrag local.spt $player local.attacker
	waitthread ethnic_telefrag local.spt $bot3 local.attacker
end

ethnic_telefrag local.spt local.list local.attacker:
	for(local.i = 1; local.i <= local.list.size; local.i++)
	{
		local.l = local.list[local.i]
		
		if(isAlive local.l && local.l != local.attacker && local.l.dmteam != "spectator")
		{
			local.vec = local.l.origin - local.spt.origin
			if(abs local.vec[0] <= 32.0 && abs local.vec[1] <= 32.0 && abs local.vec[2] < 100.0)
			{
				if(local.attacker && local.l.classname == "Player")
				{
					local.l iprint ("You were telefragged by " + local.attacker.name) 1
				}
				
				// telefrag him
				local.l damage local.attacker 10000 $world (0 0 0) (0 0 0) (0 0 0) 0 32 4 0
			}
		}
	}
end

// grab a randoment
randoment local.list:
end local.list[randomint local.list.size + 1]

// reduce to [-180,180> domain
anglesmod local.angles:
	for(local.i = 0; local.i <= 2; local.i++)
	{
		local.angles[local.i] = waitthread anglemod local.angles[local.i]
	}
end local.angles

// reduce to [-180,180> domain
anglemod local.angle:
	//println "anglemod: " local.angle " -> " (local.angle - (int ((local.angle+180)/360)) * 360.0)
	local.angle += 360.0 // make it positive
	local.angle -= (int ((local.angle+180)/360)) * 360.0
end local.angle

// must have current_weapon out!
fire_current_weapon:
	self weaponcommand mainhand firetype projectile // this causes an unharmful error
	self weaponcommand mainhand anim fire
	self.current_weapon.rounds_in_clip--

	// do damage w/ fakeweapon
	local.spread_angles = (1.0 + self.viewkick * level.bots.viewkickspreadmult) * ((randomfloat 2.0 - 1.0) (randomfloat 2.0 - 1.0) 0.0) * self.current_weapon.spread * 57.3 // 180/pi
	
	// TODO: replace w/ getviewpos call
	self.fakeweapon.origin = self gettagposition "eyes bone"
	self.fakeweapon.angles = ((self.pitch self.angles[1] self.lean_angle) + local.spread_angles)
	self.fakeweapon shoot
	
	// viewkick
	//self.pitch -= level.bots.recoil
	self.viewkick += randomfloat level.bots.viewkick_shoot
end