main local.x local.y local.x_length local.y_length local.alpha local.msg local.where local.time local.remove_time local.period:

	local.hud_id = 49

	ihuddraw_alpha self local.hud_id 0
	ihuddraw_alpha self (local.hud_id + 1) 0

	local.start_x = 0
	local.start_y = 0

	switch (local.where)
	{
		case "fromup":
			local.start_y = -local.y_length
			local.index = 1
		break
		case "fromdown":
			local.start_y = 480
			local.index = -1
		break
		case "fromright":
			local.start_x = 640
			local.index = -2
		break
		case "fromleft":
			local.start_x = -local.x_length
			local.index = 2
		break
	}

	ihuddraw_align self local.hud_id left top
	ihuddraw_rect self local.hud_id local.start_x local.start_y local.x_length local.y_length
	ihuddraw_shader self local.hud_id "textures/mohmenu/black.tga"
	ihuddraw_virtualsize self local.hud_id 1
	ihuddraw_alpha self local.hud_id local.alpha

	if ( abs local.index == 1 )
	{
		local.y_diff = local.start_y - local.y
		local.unitpertime = local.y_diff / (local.time * 20.0)

		local.done = 0
		while (local.done != 1)
		{
			waitframe

			if (self == NULL)
				end

			local.start_y -= local.unitpertime
			ihuddraw_rect self local.hud_id local.x local.start_y local.x_length local.y_length

			if ( ( local.index == 1 && local.start_y > local.y ) || ( local.index == -1 && local.start_y < local.y ) )
				local.done = 1
		}
	}
	else if ( abs local.index == 2 )
	{
		local.x_diff = local.start_x - local.x
		local.unitpertime = local.x_diff / (local.time * 20.0)

		local.done = 0
		while (local.done != 1)
		{
			waitframe

			if (self == NULL)
				end

			local.start_x -= local.unitpertime
			ihuddraw_rect self local.hud_id local.start_x local.y local.x_length local.y_length

			if ( ( local.index == 2 && local.start_x > local.x ) || ( local.index == -2 && local.start_x < local.x ) )
				local.done = 1
		}
	}

	ihuddraw_rect self local.hud_id local.x local.y local.x_length local.y_length

	wait .3

	if (self == NULL)
		end

	// 1 character ~ 5.1 wide
	ihuddraw_align self (local.hud_id + 1) left top
	ihuddraw_rect self (local.hud_id + 1) (local.x + 3) (local.y + 3) 0 0
	ihuddraw_color self (local.hud_id + 1) 1.0 1.0 1.0
	ihuddraw_font self (local.hud_id + 1) "verdana-12"
	ihuddraw_string self (local.hud_id + 1) local.msg
	ihuddraw_virtualsize self (local.hud_id + 1) 1

	local.start_alpha = 0.0
	while (local.start_alpha < 1.0)
	{
		waitframe

		if (self == NULL)
			end

		local.start_alpha += 0.05
		ihuddraw_alpha self (local.hud_id + 1) local.start_alpha
	}

	ihuddraw_alpha self (local.hud_id + 1) 1.0

	if (local.period == 0)
		end

	wait local.period

	if (self == NULL)
		end

	ihuddraw_alpha self (local.hud_id + 1) 0

	switch (local.index)
	{
		case "1":
			local.end_y = -local.y_length
		break
		case "-1":
			local.end_y = 480
		break
		case "-2":
			local.end_x = 640
		break
		case "2":
			local.end_x = -local.x_length
		break
	}

	wait .2

	if (local.remove_time == 0.0)
	{
		ihuddraw_alpha self local.hud_id 0
		end
	}

	if ( abs local.index == 1 )
	{
		local.y_diff = local.end_y - local.y
		local.unitpertime = local.y_diff / (local.remove_time * 20.0)

		local.done = 0
		while (local.done != 1)
		{
			waitframe

			if (self == NULL)
				end

			local.y += local.unitpertime
			ihuddraw_rect self local.hud_id local.x local.y local.x_length local.y_length

			if ( ( local.index == 1 && local.y < local.end_y ) || ( local.index == -1 && local.y > local.end_y ) )
				local.done = 1
		}
	}
	else if ( abs local.index == 2 )
	{
		local.x_diff = local.end_x - local.x
		local.unitpertime = local.x_diff / (local.remove_time * 20.0)

		local.done = 0
		while (local.done != 1)
		{
			waitframe

			if (self == NULL)
				end

			local.x += local.unitpertime
			ihuddraw_rect self local.hud_id local.x local.y local.x_length local.y_length

			if ( ( local.index == 2 && local.x < local.end_x ) || ( local.index == -2 && local.x > local.end_x ) )
				local.done = 1
		}
	}

	ihuddraw_alpha self local.hud_id 0

end
