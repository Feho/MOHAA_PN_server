read_file local.filepath:

	if (local.filepath == NIL)
		end

	if ( fexists local.filepath != 1 )
		end

	local.file = fopen local.filepath "rb"
	local.content = freadall local.file
	local.close = fclose local.file

	if (local.content.size == 0)
		end

end local.content

save_new_file local.filepath local.content:

	if ( local.filepath == NIL || local.content == NIL )
		end

	local.file = fopen local.filepath "w+"

	for (local.i = 1;local.i <= local.content.size;local.i++)
	{
		local.save = fputs local.file local.content[local.i]
	}

	local.close = fclose local.file

end

string_lines local.filepath:

	if (local.filepath == NIL)
		end

	if ( fexists local.filepath != 1 )
		end

	local.file = fopen local.filepath "r"

	local.text = ""
	local.new_text = NIL
	local.lines = 0

	if (local.file != 0)
	{
		local.position = fseek local.file 1 2
		local.length = ftell local.file
		local.length--

		local.close = fclose local.file
		local.file = fopen local.filepath "r"

		if (local.length > 0)
		{
			while ( !feof local.file )
			{
				if (feof local.file)
					break

				local.position = ftell local.file

				local.line = fgets local.file 2000
				if (local.line != "\n")
				{
					local.text += local.line
					local.lines++

					local.new_text[local.lines] = local.text
					local.text = ""
				}

				local.position = ftell local.file

				if (local.position >= local.length)
					break
			}
		}

		local.close = fclose local.file
	}

end local.new_text

string_to_find local.text local.string:

	if ( local.text == NIL || local.string == NIL )
		end

	local.s = 0
	for (local.i = 1;local.i <= local.text.size;local.i++)
	{
		for (local.j = 0;local.j < local.text[local.i].size;local.j++)
		{
			if (local.text[local.i][local.j] == local.string[local.s])
				local.s++
			else
			{
				if (local.s > 0)
					local.s = 0
			}

			if (local.s + 1 == local.string.size)
				end local.i
		}
	}

end

left local.text local.string:

	if ( local.text == NIL || local.string == NIL )
		end

	local.chars = ""
	local.first_char = local.string[0]

	for (local.i = 0;local.i < local.text.size;local.i++)
	{
		if (local.text[local.i] != local.first_char)
		{
			if (local.text[local.i] != "\n")
				local.chars += local.text[local.i]
		}
		else
		{
			local.s = local.i
			for (local.j = 0;local.j < local.string.size;local.j++)
			{
				if (local.text[local.s] == local.string[local.j])
					local.s++

				if ( local.s - local.i == local.string.size )
					end (string local.chars)
			}

			if (local.text[local.i] != "\n")
				local.chars += local.text[local.i]
		}
	}

end

right local.text local.string:

	if ( local.text == NIL || local.string == NIL )
		end

	local.chars = ""
	local.last_char = local.string[local.string.size - 1]

	for (local.i = local.text.size - 1;local.i >= 0;local.i--)
	{
		if (local.text[local.i] != local.last_char)
		{
			if (local.text[local.i] != "\n")
				local.chars += local.text[local.i]
		}
		else
		{
			local.s = local.i
			for (local.j = local.string.size - 1;local.j >= 0;local.j--)
			{
				if (local.text[local.s] == local.string[local.j])
					local.s--

				if ( local.i - local.s == local.string.size )
				{
					local.new_chars = ""
					for (local.k = local.chars.size - 1;local.k >= 0;local.k--)
					{
						local.new_chars += local.chars[local.k]
					}

					end (string local.new_chars)
				}
			}

			if (local.text[local.i] != "\n")
				local.chars += local.text[local.i]
		}
	}

end

player_identification local.name:

	if (local.name == NIL)
		local.name = netname self

	local.ip = getip self
	local.ip = waitthread remove_string local.ip ":"
	local.id = local.name + "+(IP " + local.ip + ")"

end local.id

remove_string local.string local.char:

	local.chars = ""

	for (local.i = 0;local.i < local.string.size;local.i++)
	{
		if (local.string[local.i] != local.char)
			local.chars += local.string[local.i]
		else
			break
	}

end local.chars
