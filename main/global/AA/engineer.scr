main local.team:

	local.engineer_caste = getcvar "engineer_caste"
	if (local.engineer_caste != "1")
		end

	self.isengineer = 1

	self takeall

	if (local.team == "allies")
	{
		self model "models/player/american_ranger.tik"

		self give models/weapons/colt45.tik
		self give models/weapons/m1_garand.tik
		self give models/weapons/m2frag_grenade.tik

		self surface us_helmet "+nodraw"
	}
	else if (local.team == "axis")
	{
		self model "models/player/german_worker.tik"

		self give models/weapons/p38.tik
		self give models/weapons/kar98.tik
		self give models/weapons/steilhandgranate.tik
	}

	self forcelegsstate STAND

	self ammo grenade 2
	self useweaponclass rifle

	self thread engineer_felszereles local.team

	if ( self.max_engineerpoint == NIL || self.max_engineerpoint == NULL )
	{
		self.max_engineerpoint = 500
		if (self.doublepoints == 1)
			self.max_engineerpoint += self.max_engineerpoint
	}

	if ( self.engineerpoint == NIL || self.engineerpoint == NULL )
		self.engineerpoint = self.max_engineerpoint

	ihuddraw_align self 45 left bottom
	ihuddraw_font self 45 facfont-20
	ihuddraw_rect self 45 40 -81 128 16
	ihuddraw_string self 45 ( "Engineer Point: " + self.engineerpoint )
	ihuddraw_color self 45 0 1 0
	ihuddraw_alpha self 45 1.0

	self.vehicle_repairing = 0

	self thread vehiclerepair
	self thread point_recharging

end

engineer_felszereles local.team:

	if (local.team == "allies")
		local.model = "models/equipment/ushelmet_engineer01.tik"
	else if (local.team == "axis")
		local.model = "models/equipment/ushelmet_engineer02.tik"

	local.helmetname = "engineer_helmet" + randomint 999999 + self.entnum
	self attachmodel local.model "Bip01 Head" 1.0 local.helmetname 1 -1 -1 -1 -1 ( -84 -1.5 0 )
	$(local.helmetname).angles = ( -180 -90 -90 )
	$(local.helmetname) scale 1.0

	local.pos = ( -3 6 -10 )

	local.wrenchname = "engineer_wrench" + randomint 999999 + self.entnum
	self attachmodel "models/miscobj/wrench.tik" "Bip01 Pelvis" 0.7 local.wrenchname 1 -1 -1 -1 -1 local.pos
	$(local.wrenchname).angles = ( 105 30 30 )
	$(local.wrenchname) scale 0.7

	self.engineer_helmet = $(local.helmetname)
	self.wrench = $(local.wrenchname)

end

vehiclerepair:

	local.damaged_vehicle = NULL

	while ( self != NULL && self.player_spawned == 1 )
	{
		if ( self.fireheld == 1 && self.secfireheld != 1 && self.useheld != 1 && self.engineerpoint > 0 )
		{
			if ( self.has_weapon != 1 && self.inveh != 1 && self.inturret != 1 )
			{
				if ($vezetheto_jarmu.size > 0)
				{
					local.damaged_vehicle = NULL

					for (local.i = 1;local.i <= $vezetheto_jarmu.size;local.i++)
					{
						local.vehicle = $vezetheto_jarmu[local.i]
						if ( isAlive local.vehicle && local.vehicle.fakehealth != NIL && local.vehicle.fakehealth < local.vehicle.maxhealth && local.vehicle.fakehealth > 0 )
						{
							local.surface = local.vehicle
							if (local.vehicle.collisionent)
								local.surface = local.vehicle.collisionent

							if ( self istouching local.surface || ( local.vehicle.torony && self istouching local.vehicle.torony ) )
							{
								if ( !local.vehicle.mpteam || ( local.vehicle.mpteam && ( local.vehicle.mpteam == "neutral" || local.vehicle.mpteam == self.dmteam ) ) )
									local.damaged_vehicle = local.vehicle
							}
						}

						if (local.damaged_vehicle != NULL)
							break
					}
				}

				if (local.damaged_vehicle != NULL)
				{
					self.vehicle_repairing = 1

					if !(self.engineer_welding_torch)
					{
						local.welding_torch_name = "engineer_welding_torch" + randomint 999999 + self.entnum
						self attachmodel "models/miscobj/welding_torch.tik" "tag_weapon_right" 1.0 local.welding_torch_name 1 -1 -1 -1 -1 ( 4 -2 -4 )
						self.engineer_welding_torch = $(local.welding_torch_name)
						self.engineer_welding_torch.angles = ( 0 0 0 )
						self.engineer_welding_torch scale 1.0
						self.engineer_welding_torch hide

						self.engineer_welding_torch show
						self.engineer_welding_torch anim idleon

						self.engineer_welding_torch loopsound welding_torch
					}

					self.engineerpoint--
					if (self.engineerpoint < 0)
						self.engineerpoint = 0

					ihuddraw_string self 45 ( "Engineer Point: " + self.engineerpoint )

					local.plus_health = 4
					if (self.fastengineer == 1)
						local.plus_health += 3

					local.damaged_vehicle.fakehealth += local.plus_health

					if (local.damaged_vehicle.fakehealth > local.damaged_vehicle.maxhealth)
						local.damaged_vehicle.fakehealth = local.damaged_vehicle.maxhealth

					if (self.classworks == 1)
					{
						if (self.repair_points == NIL)
							self.repair_points = 0.0

						if ( local.damaged_vehicle.mpteam != NIL && local.damaged_vehicle.mpteam == self.dmteam )
						{
							self.repair_points += local.plus_health / 4.0
							if (self.repair_points > 40.0)
							{
								self.repair_points = 0.0
								self thread global/AA/reward_store.scr::give_cash 4
							}
						}
					}

					local.perc = int ( (local.damaged_vehicle.fakehealth / local.damaged_vehicle.maxhealth) * 100 )

					if (local.vehicle_health_hud != 1)
					{
						local.vehicle_health_hud = 1
						local.damaged_vehicle thread global/AA/vehicle_damage.scr::vehicle_health_hud self
					}

					if ( self != NULL && local.vehicle_health_hud == 1 )
						local.damaged_vehicle thread global/AA/vehicle_damage.scr::update_vehicle_health_hud self

					if ( local.damaged_vehicle.driver != NIL && local.damaged_vehicle.driver != NULL )
						local.damaged_vehicle thread global/AA/vehicle_damage.scr::update_vehicle_health_hud local.damaged_vehicle.driver

					if ( local.damaged_vehicle.gunner != NIL && local.damaged_vehicle.gunner != NULL )
						local.damaged_vehicle thread global/AA/vehicle_damage.scr::update_vehicle_health_hud local.damaged_vehicle.gunner

					if (local.damaged_vehicle.fakehealth >= local.damaged_vehicle.maxhealth)
					{
						local.damaged_vehicle.fakehealth = local.damaged_vehicle.maxhealth
						local.damaged_vehicle = NULL
					}
				}
			}
			else
				local.damaged_vehicle = NULL
		}
		else
			local.damaged_vehicle = NULL

		if ( local.damaged_vehicle == NULL && self.vehicle_repairing == 1 )
		{
			self.vehicle_repairing = 0

			if (self.engineer_welding_torch)
			{
				self.engineer_welding_torch anim idleoff

				self.engineer_welding_torch detach
				self.engineer_welding_torch hide
				self.engineer_welding_torch notsolid

				self.engineer_welding_torch thread remove_welding_torch
			}

			if (local.vehicle_health_hud == 1)
			{
				if (self.inveh != 1)
					self thread global/AA/vehicle_damage.scr::remove_vehicle_health_hud

				local.vehicle_health_hud = 0
			}
		}

		wait .1
	}

	if (self != NULL)
	{
		self.vehicle_repairing = 0

		ihuddraw_alpha self 45 0.0

		if (local.vehicle_health_hud == 1)
			self thread global/AA/vehicle_damage.scr::remove_vehicle_health_hud

		if (self.engineer_welding_torch)
		{
			self.engineer_welding_torch anim idleoff

			self.engineer_welding_torch detach
			self.engineer_welding_torch hide
			self.engineer_welding_torch notsolid

			self.engineer_welding_torch thread remove_welding_torch
		}
	}

end

remove_welding_torch:

	self.origin = ( 0 0 -20000 )

	wait .5

	if (self)
		self remove

end

engineer_help:

	if ( self.player_spawned == 1 && self.inveh == 1 && self.engineer_call != 1 )
	{
		for (local.i = 1;local.i <= $vezetheto_jarmu.size;local.i++)
		{
			local.jarmu = $vezetheto_jarmu[local.i]
			if (local.jarmu.istank == 1)
			{
				if ( ( local.jarmu.driver && local.jarmu.driver == self ) || ( local.jarmu.gunner && local.jarmu.gunner == self ) )
				{
					switch (local.jarmu.type)
					{
						case "kingtiger":
							local.type = "King Tiger"
						break
						case "tiger":
							local.type = "Tiger"
						break
						case "panzer_brown":
						case "panzer_euro":
							local.type = "Panzer"
						break
					}
				}
			}
			else if (local.jarmu.isturret == 1)
			{
				if ( local.jarmu.gunner && local.jarmu.gunner == self )
					local.type = "Turret"
			}
			else
			{
				if ( ( local.jarmu.driver && local.jarmu.driver == self ) || ( local.jarmu.gunner && local.jarmu.gunner == self ) )
					local.type = "Jeep"
			}

			if (local.type != NIL)
			{
				self.engineer_call = 1

				self dmmessage -1 ( "I need an Engineer in " + local.type + "!!!" )
				self thread engineer_sound

				end
			}
		}
	}

end

engineer_sound:

	local.sound_org = spawn script_origin origin self.origin
	local.sound_org show
	local.sound_org loopsound needengineer

	wait 1.4

	local.sound_org stoploopsound needengineer
	local.sound_org remove

	if (self != NULL)
		self.engineer_call = 0

end

point_recharging:

	while ( self != NULL && self.player_spawned == 1 && self.engineerpoint == self.max_engineerpoint )
		wait .1

	if ( self == NULL || self.player_spawned != 1 )
		end

	local.time = 10
	local.count = local.time

	while ( self != NULL && self.player_spawned == 1 && self.engineerpoint < self.max_engineerpoint )
	{
		if (self.vehicle_repairing != 1)
			local.count--
		else
			local.count = local.time

		if (local.count == 0)
		{
			local.count = local.time

			self.engineerpoint += 10
			if (self.engineerpoint > self.max_engineerpoint)
				self.engineerpoint = self.max_engineerpoint

			ihuddraw_string self 45 ( "Engineer Point: " + self.engineerpoint )
		}

		wait .1
	}

	if (self != NULL)
	{
		if (self.engineerpoint >= self.max_engineerpoint)
		{
			self.engineerpoint = self.max_engineerpoint

			ihuddraw_string self 45 ( "Engineer Point: " + self.engineerpoint )
		}
	}

	if ( self == NULL || self.player_spawned != 1 )
		end
	else
		goto point_recharging

end
