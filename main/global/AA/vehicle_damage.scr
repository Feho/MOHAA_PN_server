main local.target local.inflictor local.damage local.position local.direction local.normal local.knockback local.damageflags local.meansofdeath local.location:

	local.vehicle = self
	if ( self.classname == "VehicleCollisionEntity" || self.classname == "VehicleTurretGun" || self.classname == "ScriptSlave" )
	{
		if (self.vehicle)
			local.vehicle = self.vehicle
	}

	if (local.vehicle.nodamage == 1)
		end

	if (local.vehicle.destroyed == 1)
		end

	if (local.vehicle.istank == 1)
	{
		if ( local.meansofdeath == 14 || local.meansofdeath == 18 || local.meansofdeath == 19 || local.meansofdeath == 20 || local.meansofdeath == 27 )
			end // Default immunes
	}

	if ( local.vehicle.immunities != NIL && local.vehicle.immunities != NULL )
	{
		for (local.i = 1;local.i <= local.vehicle.immunities.size;local.i++)
		{
			local.num = NULL
			switch (local.vehicle.immunities[local.i])
			{
				case "none":
					local.num = 0
				break
				case "suicide":
					local.num = 1
				break
				case "crush":
					local.num = 2
				break
				case "crush_every_frame":
					local.num = 3
				break
				case "telefrag":
					local.num = 4
				break
				case "lava":
					local.num = 5
				break
				case "slime":
					local.num = 6
				break
				case "falling":
					local.num = 7
				break
				case "last_self_inflicted":
					local.num = 8
				break
				case "explosion":
					local.num = 9
				break
				case "explodewall":
					local.num = 10
				break
				case "electric":
					local.num = 11
				break
				case "electricwater":
					local.num = 12
				break
				case "thrownobject":
					local.num = 13
				break
				case "grenade":
					local.num = 14
				break
				case "beam":
					local.num = 15
				break
				case "rocket":
					local.num = 16
				break
				case "impact":
					local.num = 17
				break
				case "bullet":
					local.num = 18
				break
				case "fast_bullet":
					local.num = 19
				break
				case "vehicle":
					local.num = 20
				break
				case "fire":
					local.num = 21
				break
				case "flashbang":
					local.num = 22
				break
				case "on_fire":
					local.num = 23
				break
				case "gib":
					local.num = 24
				break
				case "impale":
					local.num = 25
				break
				case "bash":
					local.num = 26
				break
				case "shotgun":
					local.num = 27
				break
			}

			if ( local.num != NULL && local.meansofdeath == local.num )
				end
		}
	}

	local.damage_multiplier = 1.0
	if (local.vehicle.istank == 1)
		local.damage_multiplier = local.vehicle waitthread check_damage_location local.normal

	local.dmg = local.damage * local.damage_multiplier

	local.gt = int ( getcvar "g_gametype" )
	local.td = int ( getcvar "g_teamdamage" )

	if ( local.inflictor != NIL && local.inflictor != NULL )
	{
		local.attacker = local.inflictor

		if ( local.gt == 1 || ( local.gt > 1 && local.td == 1 ) || ( local.gt > 1 && local.td != 1 && local.vehicle.mpteam && local.vehicle.mpteam != local.attacker.dmteam ) )
		{
			if (level.vehicle_spawnkill == 1)
			{
				if ( local.gt != 1 && local.vehicle.istank == 1 && local.vehicle.mpteam == "neutral" )
				{
					if ( local.vehicle.dmteam == "allies" && local.attacker.dmteam == "allies" )
					{
						if (local.vehicle istouching level.allies_vehicle_spawnkill_trigger)
							end
					}
					else if ( local.vehicle.dmteam == "axis" && local.attacker.dmteam == "axis" )
					{
						if (local.vehicle istouching level.axis_vehicle_spawnkill_trigger)
							end
					}
				}
			}

			local.vehicle.last_attacker = local.attacker
			local.vehicle.fakehealth -= local.dmg

			if ( local.vehicle.mpteam != "neutral" && local.vehicle.mpteam != local.attacker.dmteam )
			{
				if (local.attacker.playerextras == 1)
					local.attacker playsound hitsound

				if (local.vehicle.istank == 1)
					local.attacker thread global/AA/reward_store.scr::give_cash 5
			}

			if (local.vehicle.fakehealth <= 0)
			{
				local.vehicle takedamage
				local.vehicle removeimmune none
				local.vehicle normal_damage 10000

				end
			}

			if ( local.vehicle.driver != NIL && local.vehicle.driver != NULL )
			{
				local.vehicle thread update_vehicle_health_hud local.vehicle.driver
				local.vehicle.driver damage local.vehicle.last_attacker 0 local.vehicle.last_attacker ( 0 0 0 ) ( 0 0 0 ) ( 0 0 0 ) 0 0 9 0
			}

			if ( local.vehicle.gunner != NIL && local.vehicle.gunner != NULL )
			{
				local.vehicle thread update_vehicle_health_hud local.vehicle.gunner
				local.vehicle.gunner damage local.vehicle.last_attacker 0 local.vehicle.last_attacker ( 0 0 0 ) ( 0 0 0 ) ( 0 0 0 ) 0 0 9 0
			}
		}
	}

end

check_damage_location local.normal:

	local.yaw = self.angles[1]
	local.x = local.normal[0]
	local.y = local.normal[1]
	local.location = "side"
	local.damage_multiplier = 1.0

	if ( local.yaw == 0.000 || local.yaw == 90.000 || local.yaw == 180.000 || local.yaw == 270.000 )
	{
		switch (local.yaw)
		{
			case "0.000":
				if ( local.x > 0.000 && local.y == 0.000 )
					local.location = "front"
				else if ( local.x < 0.000 && local.y == 0.000 )
					local.location = "back"
			break
			case "90.000":
				if ( local.x == -0.000 && local.y > 0.000 )
					local.location = "front"
				else if ( local.x == 0.000 && local.y < 0.000 )
					local.location = "back"
			break
			case "180.000":
				if ( local.x < 0.000 && local.y == -0.000 )
					local.location = "front"
				else if ( local.x > 0.000 && local.y == 0.000 )
					local.location = "back"
			break
			case "270.000":
				if ( local.x == 0.000 && local.y < 0.000 )
					local.location = "front"
				else if ( local.x == -0.000 && local.y > 0.000 )
					local.location = "back"
			break
		}
	}
	else
	{
		if ( local.yaw > 0.000 && local.yaw < 90.000 )
		{
			if ( local.x > 0.000 && local.y > 0.000 )
				local.location = "front"
			else if ( local.x < 0.000 && local.y < 0.000 )
				local.location = "back"
		}
		else if ( local.yaw > 90.000 && local.yaw < 180.000 )
		{
			if ( local.x < 0.000 && local.y > 0.000 )
				local.location = "front"
			else if ( local.x > 0.000 && local.y < 0.000 )
				local.location = "back"
		}
		else if ( local.yaw > 180.000 && local.yaw < 270.000 )
		{
			if ( local.x < 0.000 && local.y < 0.000 )
				local.location = "front"
			else if ( local.x > 0.000 && local.y > 0.000 )
				local.location = "back"
		}
		else if ( local.yaw > 270.000 && local.yaw < 360.000 )
		{
			if ( local.x > 0.000 && local.y < 0.000 )
				local.location = "front"
			else if ( local.x < 0.000 && local.y > 0.000 )
				local.location = "back"
		}
	}

	switch (local.location)
	{
		case "front":
			local.damage_multiplier = randomfloat 0.2
			local.damage_multiplier += 0.4
		break
		case "back":
			local.damage_multiplier = 1.5
		break
		case "side":
			local.damage_multiplier = randomfloat 0.3
			local.damage_multiplier += 0.9
		break
	}

end local.damage_multiplier

vehicle_health_hud local.player:

	if (local.player == NULL)
		end

	local.player stufftext "globalwidgetcommand dday1 menu dday1 128 283 NONE 1"
	local.player stufftext "globalwidgetcommand dday1 shader townhallwindow"
	local.player stufftext "globalwidgetcommand dday1 fgcolor 1.00 1.00 1.00 1.00"
	local.player stufftext "globalwidgetcommand dday1 bgcolor 0.50 0.50 0.50 0.00"
	local.player stufftext "globalwidgetcommand dday1 align left bottom"
	local.player stufftext "globalwidgetcommand dday1 fadein 0"

	local.player stufftext "globalwidgetcommand june6 borderstyle NONE"
	local.player stufftext "globalwidgetcommand june6 shader textures/hud/healthback"
	local.player stufftext "globalwidgetcommand june6 rect 16 283 16 64"
	local.player stufftext "globalwidgetcommand june6 fgcolor 1.00 1.00 1.00 1.00"
	local.player stufftext "globalwidgetcommand june6 bgcolor 0.00 0.00 0.00 0.00"
	local.player stufftext "globalwidgetcommand june6 linkcvar vehiclehealth"
	local.player stufftext ( "globalwidgetcommand june6 statbar vertical 0 " + self.maxhealth )
	local.player stufftext "globalwidgetcommand june6 statbar_shader textures/hud/healthmeter"
	local.player stufftext "globalwidgetcommand june6 statbar_shader_flash textures/hud/healthmeterflash"
	local.player stufftext "globalwidgetcommand june6 ordernumber 0"

	local.player stufftext "ui_addhud dday1"
	local.player stufftext ( "set vehiclehealth " + self.fakehealth )

	ihuddraw_align local.player 40 left bottom
	ihuddraw_rect local.player 40 40 -172 0 0
	ihuddraw_color local.player 40 0.70 0.60 0.05
	ihuddraw_font local.player 40 "facfont-20"
	ihuddraw_string local.player 40 "Vehicle Health"
	ihuddraw_virtualsize local.player 40 0
	ihuddraw_alpha local.player 40 1

	local.perc = int ( (self.fakehealth / self.maxhealth) * 100 )
	if (local.perc < 1)
		local.perc = 1

	ihuddraw_align local.player 41 left bottom
	ihuddraw_rect local.player 41 40 -149 0 0
	ihuddraw_color local.player 41 0.70 0.60 0.05
	ihuddraw_font local.player 41 "facfont-20"
	ihuddraw_string local.player 41 local.perc
	ihuddraw_virtualsize local.player 41 0
	ihuddraw_alpha local.player 41 1

end

update_vehicle_health_hud local.player:

	local.player stufftext ( "set vehiclehealth " + self.fakehealth )

	local.perc = int ( (self.fakehealth / self.maxhealth) * 100 )
	if (local.perc < 1)
		local.perc = 1

	ihuddraw_string local.player 41 local.perc

end

remove_vehicle_health_hud:

	self stufftext "ui_removehud dday1"

	ihuddraw_alpha self 40 0
	ihuddraw_alpha self 41 0

end
