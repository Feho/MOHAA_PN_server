main local.team:

	local.gt = int ( getcvar "g_gametype" )
	if (local.gt == 1)
		end

	local.medic_caste = getcvar "medic_caste"
	if (local.medic_caste != "1")
		end

	self.ismedic = 1

	self takeall

	if (local.team == "allies")
	{
		self model "models/player/american_army.tik"

		self give models/weapons/colt45.tik
		self give models/weapons/thompsonsmg.tik

		self surface us_helmet "+nodraw"
	}
	else if (local.team == "axis")
	{
		self model "models/player/german_elite_sentry.tik"

		self give models/weapons/p38.tik
		self give models/weapons/mp40.tik

		self surface outside "+nodraw"
		self surface inside "+nodraw"
	}

	self forcelegsstate STAND

	self useweaponclass smg

	self thread medic_felszereles local.team

	if ( self.max_medicpoint == NIL || self.max_medicpoint == NULL )
	{
		self.max_medicpoint = 500
		if (self.doublepoints == 1)
			self.max_medicpoint += self.max_medicpoint
	}

	if ( self.medicpoint == NIL || self.medicpoint == NULL )
		self.medicpoint = self.max_medicpoint

	ihuddraw_align self 45 left bottom
	ihuddraw_font self 45 facfont-20
	ihuddraw_rect self 45 40 -81 128 16
	ihuddraw_string self 45 ( "Medic Point: " + self.medicpoint )
	ihuddraw_color self 45 0 1 0
	ihuddraw_alpha self 45 1.0

	local.medichealth = 200

	if (isAlive self)
	{
		self.health = local.medichealth
		self.healthony = local.medichealth
	}

	self.reviving = 0

	self thread medicpack
	self thread point_recharging

end

medic_felszereles local.team:

	local.helmetname = "medic_helmet" + randomint 999999 + self.entnum
	self attachmodel "models/equipment/ushelmet_medic.tik" "Bip01 Head" 1.0 local.helmetname 1 -1 -1 -1 -1 ( -84 -1.5 0 )
	$(local.helmetname).angles = ( -180 -90 -90 )
	$(local.helmetname) scale 1.0

	if (local.team == "allies")
		local.pos = ( -3 9 -8 )
	else if (local.team == "axis")
		local.pos = ( -1 9 -8 )

	local.healthboxname = "medic_healthbox" + randomint 999999 + self.entnum
	self attachmodel "models/items/item_25_healthbox.tik" "Bip01 Pelvis" 0.7 local.healthboxname 1 -1 -1 -1 -1 local.pos
	$(local.healthboxname).angles = ( -35 -125 -60 )
	$(local.healthboxname) scale 0.7

	self.medic_helmet = $(local.helmetname)
	self.medic_healthbox = $(local.healthboxname)

end

medicpack:

	local.count = 20

	while ( self != NULL && self.player_spawned == 1 )
	{
		if ( self.fireheld == 1 && self.secfireheld != 1 && self.useheld != 1 && self.medicpoint >= 50 && self.reviving != 1 && local.count == 0 )
		{
			if ( self.has_weapon != 1 && self.inveh != 1 && self.inturret != 1 )
			{
				local.count = 10

				self.medicpoint -= 50

				ihuddraw_string self 45 ( "Medic Point: " + self.medicpoint )

				self thread spawn_healthbox
			}
		}

		if (local.count > 0)
			local.count--

		wait .1
	}

	if (self != NULL)
		ihuddraw_alpha self 45 0.0

end

spawn_healthbox:

	local.origin = self gettagposition "Bip01 Head"
	local.angles = ( self.viewangles[0] self.viewangles[1] 0 )

	local.org = spawn script_origin
	local.org.origin = local.origin + angles_toforward local.angles * 5
	local.org.angles = ( 0 (local.angles[1] + 180) 0 )

	local.amount = 25
	if (self.maxhealthpack == 1)
		local.amount = 100

	local.healthbox = spawn Health model "models/items/dm_50_healthbox.tik" origin local.org.origin angles local.org.angles amount local.amount dmamount local.amount
	local.healthbox glue local.org

	local.healthbox.org = local.org
	local.healthbox.medic = self

	local.org physics_on
	local.org gravity 1.0
	local.org.velocity = angles_toforward local.angles * 1000

	local.healthbox thread healthbox_time local.org
	local.healthbox thread healthbox_stop local.org
	local.healthbox setthread healthbox_pickedup

end

healthbox_time local.org:

	local.time = 30 // 15s

	while ( self != NULL && local.org != NULL && local.time > 0 )
	{
		wait .5
		local.time--
	}

	if (local.org)
		local.org remove

	if (self)
		self remove

end

healthbox_stop local.org:

	while ( self != NULL && local.org != NULL )
	{
		local.org waittill touch

		local.item = parm.other
		if (local.item != self)
			break
	}

	if (local.org)
	{
		local.org.velocity = ( 0 0 0 )
		local.org notsolid
	}

end

healthbox_pickedup:

	self nottriggerable

	local.player = parm.other
	local.prev_health = local.player.health

	waitframe

	if (self == NULL)
		end

	if ( local.player == NULL || local.player.player_spawned != 1 )
	{
		self triggerable
		end
	}

	local.org = self.org
	local.medic = self.medic
	local.current_health = local.player.health

	if (local.prev_health != local.current_health)
	{
		if (local.org)
			local.org remove

		if (self)
			self remove

		if ( local.medic != NULL && local.medic.classworks == 1 && local.medic != local.player && local.medic.dmteam == local.player.dmteam )
		{
			local.diff = local.current_health - local.prev_health
			if (local.diff > 0.0)
			{
				if (local.medic.healing_points == NIL)
					local.medic.healing_points = 0.0

				local.medic.healing_points += local.diff
				while (local.medic.healing_points >= 100.0)
				{
					local.medic.healing_points -= 100.0
					local.medic thread global/AA/reward_store.scr::give_cash 2
				}
			}
		}

		end
	}

	self triggerable

end

dead_player local.team:

	local.gt = int ( getcvar "g_gametype" )
	if (local.gt == 1)
		end

	local.medic_caste = getcvar "medic_caste"
	if (local.medic_caste != "1")
		end

	local.org = spawn script_origin
	local.org attach self "Bip01 Spine2" 1 ( 0 0 0 )
	local.org notsolid

	local.t = spawn trigger_use
	local.t setsize ( -10 -10 -10 ) ( 10 10 40 )
	local.t glue local.org

	local.name = "death_camera" + randomint 999999 + self.entnum
	local.camera = spawn func_camera targetname local.name
	local.camera.angles = ( 0 self.viewangles[1] 0 )

	local.cam_trigger = spawn trigger_camerause target local.name

	if (local.team == "allies")
	{
		if (self.allies_medic_callsound != NIL)
			self playsound self.allies_medic_callsound
	}
	else if (local.team == "axis")
	{
		if (self.axis_medic_callsound != NIL)
			self playsound self.axis_medic_callsound
	}

	local.jelzes = spawn script_model model "models/items/item_25_healthbox.tik"
	local.jelzes.origin = self gettagposition "Bip01 Head" + ( 0 0 70 )
	local.jelzes.angles = ( 0 self.viewangles[1] 0 )
	local.jelzes notsolid

	local.jelzes rotatey 70

	local.ikon = spawn func_beam
	local.ikon.origin = self gettagposition "Bip01 Head" + ( 0 0 90 )
	local.ikon endpoint ( local.ikon.origin + ( 0 0 30 ) )
	local.ikon minoffset 0.0
	local.ikon maxoffset 0.0
	local.ikon alpha 1.0
	local.ikon color ( 1.0 1.0 1.0 )
	local.ikon scale 10.0
	local.ikon tileshader ("textures/hud/" + local.team + "_headicon")
	local.ikon numsegments 1
	local.ikon life 0
	local.ikon activate

	self thread reviving local.org local.t

	while ( self != NULL && self.player_spawned != 1 && self.dmteam != "spectator" )
	{
		local.cam_trigger douse self
		local.camera.origin = self gettagposition "Bip01 Head" + ( 0 0 30 )

		local.jelzes.origin = self gettagposition "Bip01 Head" + ( 0 0 70 )

		local.ikon.origin = self gettagposition "Bip01 Head" + ( 0 0 90 )
		local.ikon endpoint ( local.ikon.origin + ( 0 0 30 ) )

		for (local.i = 1;local.i <= $player.size;local.i++)
		{
			local.player = $player[local.i]

			if ( local.player != NULL && local.player.ismedic == 1 && local.player != self )
			{
				if ( local.player.player_spawned == 1 && local.player.dmteam == local.team )
				{
					if (local.camera cansee local.player 360 2000)
					{
						local.origin = local.player.origin + ( 0 0 50 )
						local.angles = vector_toangles ( local.origin - local.camera.origin )
						local.camera.angles = local.angles
					}
				}
			}
		}

		waitframe
	}

	if (local.camera)
		local.camera remove

	if (local.cam_trigger)
		local.cam_trigger remove

	if (local.jelzes)
		local.jelzes remove

	if (local.ikon)
		local.ikon remove

	if (local.t)
		local.t remove

	if (local.org)
		local.org remove

end

reviving local.org local.t:

	local.t waittill trigger

	local.medic = parm.other

	local.criterion = local.medic == self || local.medic.ismedic != 1 || local.medic.medicpoint < 100 || local.medic.dmteam != self.dmteam
	if (local.criterion == 1)
	{
		goto reviving local.org local.t
		end
	}

	local.dist = vector_length ( local.medic.origin - local.t.origin )
	if (local.dist <= 50)
	{
		local.medic iprint "You are too close."

		goto reviving local.org local.t
		end
	}

	local.medic.reviving = 1

	if ( getcvar "reviving_time" == "" )
		setcvar "reviving_time" "2"

	local.rev_time = int ( getcvar "reviving_time" )
	local.count = local.rev_time * 10

	local.medic stopwatch local.rev_time

	self iprint "You are being revived." 1
	self light 0 1 0 150

	if (local.medic.instant_reviving != 1)
	{
		if (local.medic.has_weapon == 1)
			local.medic deactivateweapon righthand

		while ( self != NULL && self.player_spawned != 1 && local.medic != NULL && local.medic.player_spawned == 1 && local.medic.useheld && local.medic.has_weapon != 1 && local.count > 0 )
		{
			wait .1
			local.count--
		}
	}
	else
		local.count = 0

	if (local.medic != NULL)
	{
		local.medic stopwatch 0
		local.medic.reviving = 0
	}

	if (self != NULL)
		self light 0 0 0 0

	if (local.count == 0)
	{
		self.revived = 1

		local.origin = local.t.origin
		self respawn
		self.origin = local.origin + ( 0 0 16 )

		local.medic.medicpoint -= 100

		ihuddraw_string local.medic 45 ( "Medic Point: " + local.medic.medicpoint )

		local.medic thread global/AA/reward_store.scr::give_cash 4
	}
	else
	{
		if ( self == NULL || self.player_spawned == 1 )
			end
		else
		{
			goto reviving local.org local.t
			end
		}
	}

end

medic_help:

	if (self.medic_call != 1)
	{
		self.medic_call = 1

		self dmmessage -1 ( "I need a Medic!!!" )
		self thread medic_sound
	}

end

medic_sound:

	if (self.dmteam == "allies")
	{
		if (self.allies_medic_callsound != NIL)
			self playsound self.allies_medic_callsound
	}
	else if (self.dmteam == "axis")
	{
		if (self.axis_medic_callsound != NIL)
			self playsound self.axis_medic_callsound
	}

	wait 3

	if (self != NULL)
		self.medic_call = 0

end

point_recharging:

	while ( self != NULL && self.player_spawned == 1 && self.medicpoint == self.max_medicpoint )
		wait .1

	if ( self == NULL || self.player_spawned != 1 )
		end

	local.time = 10
	local.count = local.time

	while ( self != NULL && self.player_spawned == 1 && self.medicpoint < self.max_medicpoint )
	{
		if (self.reviving != 1)
			local.count--
		else
			local.count = local.time

		if (local.count == 0)
		{
			local.count = local.time

			self.medicpoint += 10
			if (self.medicpoint > self.max_medicpoint)
				self.medicpoint = self.max_medicpoint

			ihuddraw_string self 45 ( "Medic Point: " + self.medicpoint )
		}

		wait .1
	}

	if (self != NULL)
	{
		if (self.medicpoint >= self.max_medicpoint)
		{
			self.medicpoint = self.max_medicpoint

			ihuddraw_string self 45 ( "Medic Point: " + self.medicpoint )
		}
	}

	if ( self == NULL || self.player_spawned != 1 )
		end
	else
		goto point_recharging

end
