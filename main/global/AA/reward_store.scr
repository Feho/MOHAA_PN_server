main:

	if (self.logged_in != 1)
		end

	if ( self.inveh == 1 || self.inturret == 1 )
	{
		self iprint "You can't open the store in vehicle or in turret."
		end
	}

	self.store_isopen = 1
	self.inveh = 1

	if (self.has_weapon == 1)
	{
		self deactivateweapon righthand
		self exec global/AA/check_weapons.scr "0"
	}

	self forcetorsostate JARMUBEN_DEFAULT

	local.org = spawn script_origin
	local.org.origin = self.origin
	local.org.angles = self.angles

	self glue local.org

	self waitthread store_hud
	self thread in_store local.org self.dmteam

	wait 1

	if ( self != NULL && self.player_spawned == 1 && self.already_started_store != 1 )
	{
		self.already_started_store = 1

		self iprint "PUSH THE USE BUTTON TO CLOSE THE STORE!!!" 1
	}

end

store_hud:

	ihuddraw_align self level.rewards_background_id left top
	ihuddraw_rect self level.rewards_background_id 45 150 550 250
	ihuddraw_shader self level.rewards_background_id "textures/mohmenu/black.tga"
	ihuddraw_virtualsize self level.rewards_background_id 1
	ihuddraw_alpha self level.rewards_background_id 0.9

	local.hud_id = level.rewards_hud_id
	local.x = level.rewards_x
	local.y = level.rewards_y
	local.s = 0

	for (local.i = 1;local.i <= level.rewards_size;local.i++)
	{
		local.rew = (local.hud_id - level.rewards_hud_id) + 1

		if (self.reward_activated[local.rew] != 1)
		{
			if (self.reward[level.rewards[local.rew][3]] != 1)
			{
				local.color = level.rewards_white
				ihuddraw_string self (local.hud_id + level.rewards_size) "Not PURCHASED"
			}
			else
			{
				local.color = level.rewards_blue
				ihuddraw_string self (local.hud_id + level.rewards_size) "Not ACTIVATED"
			}
		}
		else
		{
			local.color = level.rewards_green
			ihuddraw_string self (local.hud_id + level.rewards_size) "ACTIVATED"
		}

		ihuddraw_align self local.hud_id left top
		ihuddraw_rect self local.hud_id local.x local.y 0 0
		ihuddraw_color self local.hud_id local.color[0] local.color[1] local.color[2]
		ihuddraw_font self local.hud_id "verdana-12"
		ihuddraw_string self local.hud_id ( local.i + ". " + level.rewards[local.i][1] )
		ihuddraw_virtualsize self local.hud_id 1
		ihuddraw_alpha self local.hud_id 1

		ihuddraw_align self (local.hud_id + level.rewards_size) left top
		ihuddraw_rect self (local.hud_id + level.rewards_size) (local.x + level.rewards_x2 - local.s) local.y 0 0
		ihuddraw_color self (local.hud_id + level.rewards_size) local.color[0] local.color[1] local.color[2]
		ihuddraw_font self (local.hud_id + level.rewards_size) "verdana-12"
		ihuddraw_virtualsize self (local.hud_id + level.rewards_size) 1
		ihuddraw_alpha self (local.hud_id + level.rewards_size) 1

		local.y += 14
		local.hud_id++

		if (local.i == 17)
		{
			local.x += level.rewards_x2 + 100
			local.y = level.rewards_y
			local.s = 30
		}
	}

end

in_store local.org local.team:

	local.current_id = level.rewards_hud_id
	local.current_state_id = level.rewards_hud_id + level.rewards_size

	ihuddraw_color self local.current_id level.rewards_yellow[0] level.rewards_yellow[1] level.rewards_yellow[2]
	ihuddraw_color self local.current_state_id level.rewards_yellow[0] level.rewards_yellow[1] level.rewards_yellow[2]

	local.store_color = ( 0.84 0.04 0.98 )

	self light local.store_color[0] local.store_color[1] local.store_color[2] 150

	local.count = 0

	while ( self != NULL && self.player_spawned == 1 && self.logged_in == 1 && self.useheld != 1 && self.keyheld[GUGOLAS] != 1 && self.keyheld[UGRAS] != 1 )
	{
		local.rew = (local.current_id - level.rewards_hud_id) + 1

		if (local.count == 0)
		{
			if (self.keyheld[HATRA])
			{
				if ( local.current_id + 1 <= level.rewards_hud_id + (level.rewards_size - 1) )
				{
					if (self.reward_activated[local.rew] != 1)
					{
						if (self.reward[level.rewards[local.rew][3]] != 1)
							local.color = level.rewards_white
						else
							local.color = level.rewards_blue
					}
					else
						local.color = level.rewards_green

					ihuddraw_color self local.current_id local.color[0] local.color[1] local.color[2]
					ihuddraw_color self local.current_state_id local.color[0] local.color[1] local.color[2]

					local.current_id++
					local.current_state_id++

					ihuddraw_color self local.current_id level.rewards_yellow[0] level.rewards_yellow[1] level.rewards_yellow[2]
					ihuddraw_color self local.current_state_id level.rewards_yellow[0] level.rewards_yellow[1] level.rewards_yellow[2]

					local.count = 4
				}
			}
			else if (self.keyheld[ELORE])
			{
				if (local.current_id - 1 >= level.rewards_hud_id)
				{
					if (self.reward_activated[local.rew] != 1)
					{
						if (self.reward[level.rewards[local.rew][3]] != 1)
							local.color = level.rewards_white
						else
							local.color = level.rewards_blue
					}
					else
						local.color = level.rewards_green

					ihuddraw_color self local.current_id local.color[0] local.color[1] local.color[2]
					ihuddraw_color self local.current_state_id local.color[0] local.color[1] local.color[2]

					local.current_id--
					local.current_state_id--

					ihuddraw_color self local.current_id level.rewards_yellow[0] level.rewards_yellow[1] level.rewards_yellow[2]
					ihuddraw_color self local.current_state_id level.rewards_yellow[0] level.rewards_yellow[1] level.rewards_yellow[2]

					local.count = 4
				}
			}
		}

		if ( self.fireheld && local.count == 0 )
		{
			if (self.max_activated_rewards == NIL)
				self.max_activated_rewards = 0

			local.max_rewards = getcvar "max_rewards"
			if (local.max_rewards == "")
				setcvar "max_rewards" "5"

			local.max_rewards = int ( getcvar "max_rewards" )

			if (self.max_activated_rewards < local.max_rewards)
			{
				if ( self.reward[level.rewards[local.rew][3]] == 1 && self.reward_activated[local.rew] != 1 )
				{
					self.reward_activated[local.rew] = 1

					ihuddraw_string self local.current_state_id "ACTIVATED"

					self waitthread activate_rewards level.rewards[local.rew][3]

					self.max_activated_rewards++

					local.force_respawn = 1
				}
			}
			else
			{
				if (self.reward_activated[local.rew] != 1)
					self iprint "You have the maximum rewards activated!" 1
			}

			local.count = 4
		}

		waitframe

		if (local.count > 0)
			local.count--
	}

	if (self == NULL)
		end

	self light 0 0 0 0

	ihuddraw_alpha self level.rewards_background_id 0

	local.hud_id = level.rewards_hud_id

	for (local.i = 1;local.i <= level.rewards_size;local.i++)
	{
		ihuddraw_alpha self local.hud_id 0
		ihuddraw_alpha self (local.hud_id + level.rewards_size) 0

		local.hud_id++
	}

	self unglue

	if (local.org)
		local.org remove

	self.keyheld[GUGOLAS] = 0
	self.keyheld[UGRAS] = 0

	self.inveh = 0
	self.store_isopen = 0

	if (self.dmteam == local.team)
		self forcetorsostate STAND
	else
	{
		if (self.dmteam != "spectator")
		{
			self respawn
			end
		}
	}

	if (local.force_respawn == 1)
		self respawn

end

check_activated_rewards local.text local.line:

	if (local.line > local.text.size)
		end

	for (local.i = local.line;local.i <= local.text.size;local.i++)
	{
		if (local.text[local.i].size > 5)
		{
			if ( local.text[local.i][0] == "n" && local.text[local.i][1] == "a" && local.text[local.i][2] == "m" && local.text[local.i][3] == "e" && local.text[local.i][4] == "=" )
			{
				local.next_line = local.i
				break
			}
		}
	}

	if ( local.next_line != NIL && local.next_line == local.line )
		end

	if (local.next_line == NIL)
		local.next_line = local.text.size

	if (local.next_line > local.text.size)
		end

	for (local.i = local.line;local.i <= local.next_line;local.i++)
	{
		if (local.rewards_line == NIL)
			local.rewards_line[1] = local.text[local.i]
		else
			local.rewards_line[local.rewards_line.size + 1] = local.text[local.i]
	}

	if (local.rewards_line == NIL)
		end

	for (local.i = 1;local.i <= local.rewards_line.size;local.i++)
	{
		local.rew = waitthread global/AA/files.scr::left local.rewards_line[local.i] "="
		local.value = int (waitthread global/AA/files.scr::right local.rewards_line[local.i] "=")

		for (local.j = 1;local.j <= level.rewards_size;local.j++)
		{
			local.reward = level.rewards[local.j][3]

			if (local.reward == local.rew)
			{
				if (self.max_activated_rewards == NIL)
					self.max_activated_rewards = 0

				self.reward_activated[local.j] = local.value

				self waitthread activate_rewards local.reward

				self.max_activated_rewards++
			}
		}
	}

end

activate_rewards local.reward:

	switch (local.reward)
	{
		case "doublepoints":
			self.doublepoints = 1

			if (self.max_engineerpoint)
				self.max_engineerpoint += self.max_engineerpoint

			if (self.max_medicpoint)
				self.max_medicpoint += self.max_medicpoint
		break
		case "playerextras":
			self.playerextras = 1
		break
		case "healthpack":
			self.maxhealthpack = 1
		break
		case "reviving":
			self.instant_reviving = 1
		break
		case "fastengineer":
			self.fastengineer = 1
		break
		case "sniperextras":
			self.sniperextras = 1
		break
		case "reducedbombtime":
			self.reduced_bombtime = 1
		break
		case "rifledamage":
			self.rifledamage = 1
		break
		case "smgdamage":
			self.smgdamage = 1
		break
		case "machinegundamage":
			self.mgdamage = 1
		break
		case "doublecash":
			self.doublecash = 1
		break
		case "classworks":
			self.classworks = 1
		break
		case "tankreload":
			self.tankreload = 1
		break
		case "extra_vehiclespeed":
			self.extra_vehiclespeed = 1
		break
		case "ammodrop":
			self.ammodrop = 1
		break
		case "airstrike":
			self.airstrike = 1
		break
		case "artillery":
			self.artillery = 1
		break
		case "portablemg":
			self.portablemg = 1
		break
		case "mortar":
			self.mortar = 1
		break
	}

end

give_cash local.amount:

	if (self.logged_in != 1)
		end

	local.double = 1
	if (self.doublecash == 1)
		local.double = 2

	self.cash += ( int local.amount ) * local.double

	self waitthread update_rewards self.rew_username self.rew_password
	self waitthread update_cash

end

update_rewards local.username local.password:

	if (self.cash == NIL)
		self.cash = 0

	local.content[1] = ( "password=" + local.password + "\n" )
	local.content[2] = ( "cash=" + self.cash + "\n" )

	for (local.i = 1;local.i <= level.rewards_size;local.i++)
	{
		local.rew_value = self.reward[level.rewards[local.i][3]]
		if (local.rew_value == NIL)
			local.rew_value = 0

		local.content[local.content.size + 1] = ( level.rewards[local.i][3] + "=" + local.rew_value + "\n" )
	}

	waitthread global/AA/files.scr::save_new_file ( "main/global/accounts/" + local.username + ".txt" ) local.content

end

update_cash:

	ihuddraw_align self level.cash_id left bottom
	ihuddraw_rect self level.cash_id 16 -100 10 10
	ihuddraw_color self level.cash_id 1.0 0.59 0.06 // red, green, blue
	ihuddraw_font self level.cash_id "facfont-20"
	ihuddraw_alpha self level.cash_id 1
	ihuddraw_string self level.cash_id ( "CASH: " + self.cash + " $" )
	ihuddraw_alpha self level.cash_id 1

end

reset_rewards:

	if (self.doublepoints == 1)
	{
		if (self.max_engineerpoint)
			self.max_engineerpoint -= (self.max_engineerpoint / 2)

		if (self.max_medicpoint)
			self.max_medicpoint -= (self.max_medicpoint / 2)
	}

	ihuddraw_alpha self level.cash_id 0

	self.cash = NIL
	self.doublepoints = NIL
	self.playerextras = NIL
	self.maxhealthpack = NIL
	self.instant_reviving = NIL
	self.fastengineer = NIL
	self.sniperextras = NIL
	self.reduced_bombtime = NIL
	self.rifledamage = NIL
	self.smgdamage = NIL
	self.mgdamage = NIL
	self.doublecash = NIL
	self.classworks = NIL
	self.tankreload = NIL
	self.extra_vehiclespeed = NIL
	self.ammodrop = NIL
	self.airstrike = NIL
	self.artillery = NIL
	self.portablemg = NIL
	self.mortar = NIL

	for (local.i = 1;local.i <= level.rewards_size;local.i++)
	{
		local.rew = level.rewards[local.i][3]

		self.reward[local.rew] = 0
		self.reward_activated[local.i] = 0
	}

	self.max_activated_rewards = 0

	waitframe

	if ( self != NULL && self.player_spawned == 1 )
		self respawn

end

////----------------------------------------------------------------------------------------------////
////<<<---------------------------------->>>REWARD SCRIPTS<<<---------------------------------->>>////
////----------------------------------------------------------------------------------------------////
spawned_player_rewards:

	if (self.logged_in != 1)
		end

	if (self.playerextras == 1)
	{
		self ammo pistol 999
		self ammo rifle 999
		self ammo smg 999
		self ammo mg 999
		self ammo grenade 999
		self ammo heavy 999
		self ammo shotgun 999
	}

	if ( self.ismedic != 1 && self.isengineer != 1 && self.portablemg == 1 )
	{
		self exec global/AA/portablemg.scr self.dmteam
	}

	if (self.airstrike == 1)
	{
		self exec global/AA/airstrike.scr
	}

	if (self.artillery == 1)
	{
		self exec global/AA/artillery.scr
	}

	if (self.mortar == 1)
	{
		self exec global/AA/mortar.scr
	}

end
