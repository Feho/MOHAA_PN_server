main local.team:

	if (self.isengineer != 1)
		end

	if (self.can_dropammo == NIL)
		self.can_dropammo = 1

	if (self.ammodrop_help != 1)
	{
		self.ammodrop_help = 1
		self iprint "You can drop ammo by holstering your weapon and pressing the sec. attack button!" 1
	}

	if ( self.can_dropammo == 1 && self.fireheld == 1 && self.secfireheld == 1 && self.useheld != 1 && self.engineerpoint >= 50 )
	{
		if ( self.has_weapon != 1 && self.inveh != 1 && self.inturret != 1 )
		{
			self.can_dropammo = 0

			self.engineerpoint -= 50
			if (self.engineerpoint < 0)
				self.engineerpoint = 0

			ihuddraw_string self 45 ( "Engineer Point: " + self.engineerpoint )

			self thread spawn_ammunitionbox local.team
		}
	}

end

spawn_ammunitionbox local.team:

	local.angles = ( self.viewangles[0] self.viewangles[1] 0 )
	local.origin = self gettagposition "Bip01 Head" + angles_toforward local.angles * 5

	local.ammunitionbox = spawn script_model model "models/items/item_mg_ammobox.tik" origin local.origin angles ( 0 (local.angles[1] + 180) 0 )
	local.ammunitionbox.dmteam = local.team
	local.ammunitionbox touchtriggers

	local.ammunitionbox.trigger = spawn trigger_multiple
	local.ammunitionbox.trigger glue local.ammunitionbox
	local.ammunitionbox.trigger setsize ( -10 -10 -10 ) ( 10 10 10 )

	local.ammunitionbox.vehtrigger = spawn trigger_vehicle
	local.ammunitionbox.vehtrigger glue local.ammunitionbox
	local.ammunitionbox.vehtrigger setsize ( -10 -10 -10 ) ( 10 10 10 )

	local.ammunitionbox.player = self
	local.ammunitionbox.trigger.box = local.ammunitionbox
	local.ammunitionbox.vehtrigger.box = local.ammunitionbox

	local.ammunitionbox physics_on
	local.ammunitionbox gravity 1.0
	local.ammunitionbox.velocity = angles_toforward local.angles * 1000

	local.ammunitionbox thread ammunitionbox_time local.ammunitionbox.trigger local.ammunitionbox.vehtrigger
	local.ammunitionbox thread ammunitionbox_stop

	local.ammunitionbox.trigger setthread player_ammunition
	local.ammunitionbox.vehtrigger setthread vehicle_ammunition

	self thread can_drop_ammo

end

can_drop_ammo:

	wait 1

	if (self != NULL)
		self.can_dropammo = 1

end

ammunitionbox_time local.t local.vt:

	local.time = 30 // 15s

	while ( self != NULL && local.time > 0 )
	{
		wait .5
		local.time--
	}

	if (local.t)
		local.t remove

	if (local.vt)
		local.vt remove

	if (self)
		self remove

end

ammunitionbox_stop:

	while (self != NULL)
	{
		self waittill touch

		local.item = parm.other
		if (local.item != self)
			break
	}

	if (self)
	{
		self.velocity = ( 0 0 0 )
		self notsolid

		if ( local.item != NIL && local.item.isvehicle == 1 && local.item.isturret != 1 )
			self.vehtrigger thread add_vehicle_ammo local.item
	}

end

player_ammunition:

	self nottriggerable

	local.player = parm.other

	if (local.player.player_spawned == 1)
	{
		local.player ammo pistol 20
		local.player ammo rifle 20
		local.player ammo smg 30
		local.player ammo mg 40
		local.player ammo grenade 2
		local.player ammo heavy 2
		local.player ammo shotgun 20

		if ( local.player.has_portablemg == 1 && local.player.portable_mg != NIL && local.player.portable_mg != NULL )
		{
			local.player.portable_mg.tolteny += 50
			if (local.player.portable_mg.tolteny > local.player.portable_mg.maxtolteny)
				local.player.portable_mg.tolteny = local.player.portable_mg.maxtolteny

			local.player stufftext ("set portablemg " + local.player.portable_mg.tolteny)
		}

		if (local.player.ismortarman == 1)
		{
			local.player.mortar_ap_proj_amount += 5
			local.player.mortar_he_proj_amount += 5

			if (local.player.mortar_ap_proj_amount > local.player.mortar_max_ap_proj_amount)
				local.player.mortar_ap_proj_amount = local.player.mortar_max_ap_proj_amount

			if (local.player.mortar_he_proj_amount > local.player.mortar_max_he_proj_amount)
				local.player.mortar_he_proj_amount = local.player.mortar_max_he_proj_amount

			if (local.player.has_mortar == 1)
				local.player thread global/AA/mortar.scr::check_ammo_hud
		}

		local.player playsound bar_snd_pickup_ammo

		local.player iprint "You picked up an ammobox."
	}
	else
	{
		self triggerable
		end
	}

	if (self)
	{
		if (self.box)
		{
			if (self.box.vehtrigger)
				self.box.vehtrigger remove

			self.box remove
		}

		self remove
	}

end

vehicle_ammunition:

	self nottriggerable

	local.vehicle = parm.other

	if (local.vehicle.classname == "VehicleCollisionEntity")
	{
		if (local.vehicle.vehicle)
			local.vehicle = local.vehicle.vehicle
		else
		{
			self triggerable
			end
		}
	}

	if (local.vehicle.fakehealth <= 0)
	{
		self triggerable
		end
	}

	self thread add_vehicle_ammo local.vehicle

end

add_vehicle_ammo local.vehicle:

	local.box_remove = 0

	if ( local.vehicle.mpteam && ( local.vehicle.mpteam == "neutral" || local.vehicle.mpteam == self.box.dmteam ) )
	{
		if (local.vehicle.torony_geppuska)
		{
			if (local.vehicle.torony_geppuska.tolteny < local.vehicle.torony_geppuska.max_tolteny)
			{
				local.box_remove = 1

				local.vehicle.torony_geppuska.tolteny += 50
				if (local.vehicle.torony_geppuska.tolteny > local.vehicle.torony_geppuska.max_tolteny)
					local.vehicle.torony_geppuska.tolteny = local.vehicle.torony_geppuska.max_tolteny
			}
		}

		if ( local.vehicle.max_lovedek_szama != NIL && local.vehicle.max_lovedek_szama != NULL )
		{
			if (local.vehicle.lovedek_szama < local.vehicle.max_lovedek_szama)
			{
				local.box_remove = 1

				local.vehicle.lovedek_szama += 5
				if (local.vehicle.lovedek_szama > local.vehicle.max_lovedek_szama)
					local.vehicle.lovedek_szama = local.vehicle.max_lovedek_szama

				if ( local.vehicle.driver != NIL && local.vehicle.driver != NULL )
					ihuddraw_string local.vehicle.driver 42 ( "Shell: " + local.vehicle.lovedek_szama + " || MG: " + local.vehicle.torony_geppuska.tolteny_tarban + " | " + local.vehicle.torony_geppuska.tolteny )
			}
		}

		if (local.vehicle.test_geppuska)
		{
			if (local.vehicle.test_geppuska.tolteny < local.vehicle.test_geppuska.max_tolteny)
			{
				local.box_remove = 1

				local.vehicle.test_geppuska.tolteny += 50
				if (local.vehicle.test_geppuska.tolteny > local.vehicle.test_geppuska.max_tolteny)
					local.vehicle.test_geppuska.tolteny = local.vehicle.test_geppuska.max_tolteny

				if ( local.vehicle.gunner != NIL && local.vehicle.gunner != NULL )
					ihuddraw_string local.vehicle.gunner 42 ( "MG: " + local.vehicle.test_geppuska.tolteny_tarban + " | " + local.vehicle.test_geppuska.tolteny )
			}
		}

		if (local.vehicle.max_tolteny)
		{
			if (local.vehicle.tolteny < local.vehicle.max_tolteny)
			{
				local.box_remove = 1

				local.vehicle.tolteny += 50
				if (local.vehicle.tolteny > local.vehicle.max_tolteny)
					local.vehicle.tolteny = local.vehicle.max_tolteny

				if ( local.vehicle.gunner != NIL && local.vehicle.gunner != NULL )
					ihuddraw_string local.vehicle.gunner 42 ( "MG: " + local.vehicle.tolteny_tarban + " | " + local.vehicle.tolteny )
			}
		}
	}

	if (local.box_remove == 1)
		local.vehicle playsound bar_snd_pickup_ammo

	if (self)
	{
		if (self.box)
		{
			if (self.box.trigger)
				self.box.trigger remove

			self.box remove
		}

		self remove
	}

end

ammo_help:

	if (self.ammo_call == 1)
		end

	if ( self.player_spawned == 1 && self.ammo_call != 1 )
	{
		self.ammo_call = 1

		if (self.inveh == 1)
		{
			for (local.i = 1;local.i <= $vezetheto_jarmu.size;local.i++)
			{
				local.jarmu = $vezetheto_jarmu[local.i]
				if (local.jarmu.istank == 1)
				{
					if ( ( local.jarmu.driver && local.jarmu.driver == self ) || ( local.jarmu.gunner && local.jarmu.gunner == self ) )
					{
						switch (local.jarmu.type)
						{
							case "kingtiger":
								local.type = "King Tiger"
							break
							case "tiger":
								local.type = "Tiger"
							break
							case "panzer_brown":
							case "panzer_euro":
								local.type = "Panzer"
							break
						}
					}
				}
				else if (local.jarmu.isturret != 1)
				{
					if ( ( local.jarmu.driver && local.jarmu.driver == self ) || ( local.jarmu.gunner && local.jarmu.gunner == self ) )
						local.type = "Jeep"
				}

				if (local.type != NIL)
				{
					self dmmessage -1 ( "I need Ammo in " + local.type + "!!!" )
					break
				}
			}
		}
		else
			self dmmessage -1 ( "I need Ammo!!!" )
	}

	wait 1

	if (self != NULL)
		self.ammo_call = 0

end
